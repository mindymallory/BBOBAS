 # Nearby and plus1
  ########################################################################################  
  
  nearby_BID        <- to.period(qnearby$BID, period = 'seconds', k = 1, OHLC = FALSE)
  nearby_BID_rets   <- diff.xts(nearby_BID, lag = 1, differences = 1, arithmetic = TRUE, log = TRUE, na.pad = TRUE)
  non_zeros         <- index(nearby_BID_rets)[which(nearby_BID_rets != 0)]
  nsecs_to_update_BID_rets   <- difftime(non_zeros[1:(length(non_zeros)-1)], non_zeros[2:length(non_zeros)], unit='secs')
  nearby_BID_rets_no0s<- subset(nearby_BID_rets, BID != 0)
  nearby_BID_rets_lag1s<- lag.xts(nearby_BID_rets, k=-1)
  nearby_BID_rets_lag10s<- lag.xts(nearby_BID_rets, k=-10)
  
  plus1_BID         <- to.period(qplus1$BID, period = 'seconds', k = 1, OHLC = FALSE)
  plus1_BID_rets    <- diff.xts(plus1_BID, lag = 1, differences = 1, arithmetic = TRUE, log = TRUE, na.pad = TRUE)
  non_zeros         <- index(plus1_BID_rets)[which(plus1_BID_rets != 0)]
  p1secs_to_update_BID_rets  <-difftime(non_zeros[1:(length(non_zeros)-1)], non_zeros[2:length(non_zeros)], unit='secs')
  plus1_BID_rets_no0s<- subset(plus1_BID_rets, BID !=0)
  plus1_BID_rets_lag1s<- lag.xts(plus1_BID_rets, k=-1)
  plus1_BID_rets_lag10s<- lag.xts(plus1_BID_rets, k=-10)
  
  
  nearby_OFR        <- to.period(qnearby$OFR, period = 'seconds', k = 1, OHLC = FALSE)
  nearby_OFR_rets   <- diff.xts(nearby_OFR, lag = 1, differences = 1, arithmetic = TRUE, log = TRUE, na.pad = TRUE)
  non_zeros         <- index(nearby_OFR_rets)[which(nearby_OFR_rets != 0)]
  nsecs_to_update_OFR_rets   <-difftime(non_zeros[1:(length(non_zeros)-1)], non_zeros[2:length(non_zeros)], unit='secs')
  nearby_OFR_rets_no0s<- subset(nearby_OFR_rets, OFR != 0)
  nearby_OFR_rets_lag1s<- lag.xts(nearby_OFR_rets, k=-1)
  nearby_OFR_rets_lag10s<- lag.xts(nearby_OFR_rets, k=-10)
  
  plus1_OFR         <- to.period(qplus1$OFR, period = 'seconds', k = 1, OHLC = FALSE)
  plus1_OFR_rets    <- diff.xts(plus1_OFR, lag = 1, differences = 1, arithmetic = TRUE, log = TRUE, na.pad = TRUE)
  non_zeros         <- index(plus1_OFR_rets)[which(plus1_OFR_rets != 0)]
  p1secs_to_update_OFR_rets  <-difftime(non_zeros[1:(length(non_zeros)-1)], non_zeros[2:length(non_zeros)], unit='secs')
  plus1_OFR_rets_no0s<- subset(plus1_OFR_rets, OFR !=0)
  plus1_OFR_rets_lag1s<- lag.xts(plus1_OFR_rets, k=-1)
  plus1_OFR_rets_lag10s<- lag.xts(plus1_OFR_rets, k=-10)
  
  # Full day correlations
  # BIDS, Levels
  near_plus1_BID        <- merge(nearby_BID, plus1_BID, all = TRUE, fill = NA, join = "outer", retside = TRUE, 
                                 retclass = "xts")                
  near_plus1_BID.df     <- as.data.frame(near_plus1_BID)
  cor(near_plus1_BID.df, use = "pairwise.complete.obs")
  
  # BIDS, 'Returns'
  #Keep zeroes
  near_plus1_BID_rets   <- merge(nearby_BID_rets, plus1_BID_rets, all = TRUE, fill = NA, join = "outer", 
                                 retside = TRUE, retclass = "xts")                
  near_plus1_BID_rets.df<- as.data.frame(near_plus1_BID_rets)
  near_plus1_BID_rets_lag1s   <- merge(nearby_BID_rets_lag1s, plus1_BID_rets, all = TRUE, fill = NA, join = "outer", 
                                       retside = TRUE, retclass = "xts")                
  near_plus1_BID_rets_lag1s.df<- as.data.frame(near_plus1_BID_rets_lag1s)
  near_plus1_BID_rets_lag10s   <- merge(nearby_BID_rets_lag10s, plus1_BID_rets, all = TRUE, fill = NA, join = "outer", 
                                        retside = TRUE, retclass = "xts")                
  near_plus1_BID_rets_lag10s.df<- as.data.frame(near_plus1_BID_rets_lag10s)
  cor(near_plus1_BID_rets.df, use = "pairwise.complete.obs")  
  cor(near_plus1_BID_rets_lag1s.df, use = "pairwise.complete.obs")
  cor(near_plus1_BID_rets_lag10s.df, use = "pairwise.complete.obs")
  
  # No zeros
  near_plus1_BID_rets_no0s   <- merge(nearby_BID_rets_no0s, plus1_BID_rets_no0s, all = TRUE, fill = NA, join = "outer", 
                                      retside = TRUE, retclass = "xts")                
  near_plus1_BID_rets_no0s.df<- as.data.frame(near_plus1_BID_rets_no0s)
  cor(near_plus1_BID_rets_no0s.df, use = "pairwise.complete.obs")
  
  # OFR, Levels
  near_plus1_OFR        <- merge(nearby_OFR, plus1_OFR, all = TRUE, fill = NA, join = "outer", retside = TRUE, 
                                 retclass = "xts")                
  near_plus1_OFR.df     <- as.data.frame(near_plus1_OFR)
  cor(near_plus1_OFR.df, use = "pairwise.complete.obs")
  
  # 'Returns'
  near_plus1_OFR_rets   <- merge(nearby_OFR_rets, plus1_OFR_rets, all = TRUE, fill = NA, join = "outer", 
                                 retside = TRUE, retclass = "xts")                
  near_plus1_OFR_rets.df<- as.data.frame(near_plus1_OFR_rets)
  near_plus1_OFR_rets_lag1s   <- merge(nearby_OFR_rets_lag1s, plus1_OFR_rets, all = TRUE, fill = NA, join = "outer", 
                                       retside = TRUE, retclass = "xts")                
  near_plus1_OFR_rets_lag1s.df<- as.data.frame(near_plus1_OFR_rets_lag1s)
  near_plus1_OFR_rets_lag10s   <- merge(nearby_OFR_rets_lag10s, plus1_OFR_rets, all = TRUE, fill = NA, join = "outer", 
                                        retside = TRUE, retclass = "xts")                
  near_plus1_OFR_rets_lag10s.df<- as.data.frame(near_plus1_OFR_rets_lag10s)
  cor(near_plus1_OFR_rets.df, use = "pairwise.complete.obs")
  cor(near_plus1_OFR_rets_lag1s.df, use = "pairwise.complete.obs")
  cor(near_plus1_OFR_rets_lag10s.df, use = "pairwise.complete.obs")
  
  # No zeros
  near_plus1_OFR_rets_no0s   <- merge(nearby_OFR_rets_no0s, plus1_OFR_rets_no0s, all = TRUE, fill = NA, join = "outer", 
                                      retside = TRUE, retclass = "xts")                
  near_plus1_OFR_rets_no0s.df<- as.data.frame(near_plus1_OFR_rets_no0s)
  cor(near_plus1_OFR_rets_no0s.df, use = "pairwise.complete.obs")
  
 
  ######################################################################################## 
  
  # #Nearby and plus2
  # ########################################################################################  
  
  plus2_BID         <- to.period(qplus2$BID, period = 'seconds', k = 1, OHLC = FALSE)
  plus2_BID_rets    <- diff.xts(plus2_BID, lag = 1, differences = 1, arithmetic = TRUE, log = TRUE, na.pad = TRUE)
  non_zeros         <- index(plus2_BID_rets)[which(plus2_BID_rets != 0)]
  p2secs_to_update_BID_rets  <-difftime(non_zeros[1:(length(non_zeros)-1)], non_zeros[2:length(non_zeros)], unit='secs')
  plus2_BID_rets_no0s<- subset(plus2_BID_rets, BID !=0)
  plus2_BID_rets_lag1s<- lag.xts(plus2_BID_rets, k=-1)
  plus2_BID_rets_lag10s<- lag.xts(plus2_BID_rets, k=-10)
  
  plus2_OFR         <- to.period(qplus2$OFR, period = 'seconds', k = 1, OHLC = FALSE)
  plus2_OFR_rets    <- diff.xts(plus2_OFR, lag = 1, differences = 1, arithmetic = TRUE, log = TRUE, na.pad = TRUE)
  non_zeros         <- index(plus2_OFR_rets)[which(plus2_OFR_rets != 0)]
  p2secs_to_update_OFR_rets  <-difftime(non_zeros[1:(length(non_zeros)-1)], non_zeros[2:length(non_zeros)], unit='secs')
  plus2_OFR_rets_no0s<- subset(plus2_OFR_rets, OFR !=0)
  plus2_OFR_rets_lag1s<- lag.xts(plus2_OFR_rets, k=-1)
  plus2_OFR_rets_lag10s<- lag.xts(plus2_OFR_rets, k=-10)
  
  # Full day correlations
  # BIDS, Levels
  near_plus2_BID        <- merge(nearby_BID, plus2_BID, all = TRUE, fill = NA, join = "outer", retside = TRUE, 
                                 retclass = "xts")                
  near_plus2_BID.df     <- as.data.frame(near_plus2_BID)
  cor(near_plus2_BID.df, use = "pairwise.complete.obs")
  
  # BIDS, 'Returns'
  #Keep zeroes
  near_plus2_BID_rets   <- merge(nearby_BID_rets, plus2_BID_rets, all = TRUE, fill = NA, join = "outer", 
                                 retside = TRUE, retclass = "xts")                
  near_plus2_BID_rets.df<- as.data.frame(near_plus2_BID_rets)
  near_plus2_BID_rets_lag1s   <- merge(nearby_BID_rets, plus2_BID_rets_lag1s, all = TRUE, fill = NA, join = "outer", 
                                       retside = TRUE, retclass = "xts")                
  near_plus2_BID_rets_lag1s.df<- as.data.frame(near_plus2_BID_rets_lag1s)
  near_plus2_BID_rets_lag10s   <- merge(nearby_BID_rets, plus2_BID_rets_lag10s, all = TRUE, fill = NA, join = "outer", 
                                        retside = TRUE, retclass = "xts")                
  near_plus2_BID_rets_lag10s.df<- as.data.frame(near_plus2_BID_rets_lag10s)
  cor(near_plus2_BID_rets.df, use = "pairwise.complete.obs")  
  cor(near_plus2_BID_rets_lag1s.df, use = "pairwise.complete.obs")
  cor(near_plus2_BID_rets_lag10s.df, use = "pairwise.complete.obs")
  
  # No zeros
  near_plus2_BID_rets_no0s   <- merge(nearby_BID_rets_no0s, plus2_BID_rets_no0s, all = TRUE, fill = NA, join = "outer", 
                                      retside = TRUE, retclass = "xts")                
  near_plus2_BID_rets_no0s.df<- as.data.frame(near_plus2_BID_rets_no0s)
  cor(near_plus2_BID_rets_no0s.df, use = "pairwise.complete.obs")
  
  # OFR, Levels
  near_plus2_OFR        <- merge(nearby_OFR, plus2_OFR, all = TRUE, fill = NA, join = "outer", retside = TRUE, 
                                 retclass = "xts")                
  near_plus2_OFR.df     <- as.data.frame(near_plus2_OFR)
  cor(near_plus2_OFR.df, use = "pairwise.complete.obs")
  
  # 'Returns'
  near_plus2_OFR_rets   <- merge(nearby_OFR_rets, plus2_OFR_rets, all = TRUE, fill = NA, join = "outer", 
                                 retside = TRUE, retclass = "xts")                
  near_plus2_OFR_rets.df<- as.data.frame(near_plus2_OFR_rets)
  near_plus2_OFR_rets_lag1s   <- merge(nearby_OFR_rets, plus2_OFR_rets_lag1s, all = TRUE, fill = NA, join = "outer", 
                                       retside = TRUE, retclass = "xts")                
  near_plus2_OFR_rets_lag1s.df<- as.data.frame(near_plus2_OFR_rets_lag1s)
  near_plus2_OFR_rets_lag10s   <- merge(nearby_OFR_rets, plus2_OFR_rets_lag10s, all = TRUE, fill = NA, join = "outer", 
                                        retside = TRUE, retclass = "xts")                
  near_plus2_OFR_rets_lag10s.df<- as.data.frame(near_plus2_OFR_rets_lag10s)
  cor(near_plus2_OFR_rets.df, use = "pairwise.complete.obs")
  cor(near_plus2_OFR_rets_lag1s.df, use = "pairwise.complete.obs")
  cor(near_plus2_OFR_rets_lag10s.df, use = "pairwise.complete.obs")
  
  # No zeros
  near_plus2_OFR_rets_no0s   <- merge(nearby_OFR_rets_no0s, plus2_OFR_rets_no0s, all = TRUE, fill = NA, join = "outer", 
                                      retside = TRUE, retclass = "xts")                
  near_plus2_OFR_rets_no0s.df<- as.data.frame(near_plus2_OFR_rets_no0s)
  cor(near_plus2_OFR_rets_no0s.df, use = "pairwise.complete.obs")
   # ######################################################################################## 
  #  
  # 
  # #Nearby and plus3
  # ########################################################################################  
  plus3_BID         <- to.period(qplus3$BID, period = 'seconds', k = 1, OHLC = FALSE)
  plus3_BID_rets    <- diff.xts(plus3_BID, lag = 1, differences = 1, arithmetic = TRUE, log = TRUE, na.pad = TRUE)
  non_zeros         <- index(plus3_BID_rets)[which(plus3_BID_rets != 0)]
  p3secs_to_update_BID_rets  <-difftime(non_zeros[1:(length(non_zeros)-1)], non_zeros[2:length(non_zeros)], unit='secs')
  plus3_BID_rets_no0s<- subset(plus3_BID_rets, BID !=0)
  plus3_BID_rets_lag1s<- lag.xts(plus3_BID_rets, k=-1)
  plus3_BID_rets_lag10s<- lag.xts(plus3_BID_rets, k=-10)
  
  plus3_OFR         <- to.period(qplus3$OFR, period = 'seconds', k = 1, OHLC = FALSE)
  plus3_OFR_rets    <- diff.xts(plus3_OFR, lag = 1, differences = 1, arithmetic = TRUE, log = TRUE, na.pad = TRUE)
  non_zeros         <- index(plus3_OFR_rets)[which(plus3_OFR_rets != 0)]
  p3secs_to_update_OFR_rets  <-difftime(non_zeros[1:(length(non_zeros)-1)], non_zeros[2:length(non_zeros)], unit='secs')
  plus3_OFR_rets_no0s<- subset(plus3_OFR_rets, OFR !=0)
  plus3_OFR_rets_lag1s<- lag.xts(plus3_OFR_rets, k=-1)
  plus3_OFR_rets_lag10s<- lag.xts(plus3_OFR_rets, k=-10)
  
  # Full day correlations
  # BIDS, Levels
  near_plus3_BID        <- merge(nearby_BID, plus3_BID, all = TRUE, fill = NA, join = "outer", retside = TRUE, 
                                 retclass = "xts")                
  near_plus3_BID.df     <- as.data.frame(near_plus3_BID)
  cor(near_plus3_BID.df, use = "pairwise.complete.obs")
  
  # BIDS, 'Returns'
  #Keep zeroes
  near_plus3_BID_rets   <- merge(nearby_BID_rets, plus3_BID_rets, all = TRUE, fill = NA, join = "outer", 
                                 retside = TRUE, retclass = "xts")                
  near_plus3_BID_rets.df<- as.data.frame(near_plus3_BID_rets)
  near_plus3_BID_rets_lag1s   <- merge(nearby_BID_rets, plus3_BID_rets_lag1s, all = TRUE, fill = NA, join = "outer", 
                                       retside = TRUE, retclass = "xts")                
  near_plus3_BID_rets_lag1s.df<- as.data.frame(near_plus3_BID_rets_lag1s)
  near_plus3_BID_rets_lag10s   <- merge(nearby_BID_rets, plus3_BID_rets_lag10s, all = TRUE, fill = NA, join = "outer", 
                                        retside = TRUE, retclass = "xts")                
  near_plus3_BID_rets_lag10s.df<- as.data.frame(near_plus3_BID_rets_lag10s)
  cor(near_plus3_BID_rets.df, use = "pairwise.complete.obs")  
  cor(near_plus3_BID_rets_lag1s.df, use = "pairwise.complete.obs")
  cor(near_plus3_BID_rets_lag10s.df, use = "pairwise.complete.obs")
  
  # No zeros
  near_plus3_BID_rets_no0s   <- merge(nearby_BID_rets_no0s, plus3_BID_rets_no0s, all = TRUE, fill = NA, join = "outer", 
                                      retside = TRUE, retclass = "xts")                
  near_plus3_BID_rets_no0s.df<- as.data.frame(near_plus3_BID_rets_no0s)
  cor(near_plus3_BID_rets_no0s.df, use = "pairwise.complete.obs")
  
  # OFR, Levels
  near_plus3_OFR        <- merge(nearby_OFR, plus3_OFR, all = TRUE, fill = NA, join = "outer", retside = TRUE, 
                                 retclass = "xts")                
  near_plus3_OFR.df     <- as.data.frame(near_plus3_OFR)
  cor(near_plus3_OFR.df, use = "pairwise.complete.obs")
  
  # 'Returns'
  near_plus3_OFR_rets   <- merge(nearby_OFR_rets, plus3_OFR_rets, all = TRUE, fill = NA, join = "outer", 
                                 retside = TRUE, retclass = "xts")                
  near_plus3_OFR_rets.df<- as.data.frame(near_plus3_OFR_rets)
  near_plus3_OFR_rets_lag1s   <- merge(nearby_OFR_rets, plus3_OFR_rets_lag1s, all = TRUE, fill = NA, join = "outer", 
                                       retside = TRUE, retclass = "xts")                
  near_plus3_OFR_rets_lag1s.df<- as.data.frame(near_plus3_OFR_rets_lag1s)
  near_plus3_OFR_rets_lag10s   <- merge(nearby_OFR_rets, plus3_OFR_rets_lag10s, all = TRUE, fill = NA, join = "outer", 
                                        retside = TRUE, retclass = "xts")                
  near_plus3_OFR_rets_lag10s.df<- as.data.frame(near_plus3_OFR_rets_lag10s)
  cor(near_plus3_OFR_rets.df, use = "pairwise.complete.obs")
  cor(near_plus3_OFR_rets_lag1s.df, use = "pairwise.complete.obs")
  cor(near_plus3_OFR_rets_lag10s.df, use = "pairwise.complete.obs")
  
  # No zeros
  near_plus3_OFR_rets_no0s   <- merge(nearby_OFR_rets_no0s, plus3_OFR_rets_no0s, all = TRUE, fill = NA, join = "outer", 
                                      retside = TRUE, retclass = "xts")                
  near_plus3_OFR_rets_no0s.df<- as.data.frame(near_plus3_OFR_rets_no0s)
  cor(near_plus3_OFR_rets_no0s.df, use = "pairwise.complete.obs")
 
  # ######################################################################################## 
# ######################################################################################## 

# In time bins - ten minutes
# Date in the CUMULCORREL1_BID timestamp is irrelevant. We are creating 10 minute bins, in which we place 
# correlations from each day in columns. Last time stamp says 13:19:50, but really it is 13:15:50
# but in the timeSequence function, partial bins are not allowed and 13:09:59 to 13:15:59 is not a full 
# ten minutes.

    # BIDS, 'Returns' Keep zeros
      ep <- endpoints(near_plus1_BID_rets.df, 'minutes', k=10)
      correl1_rets<- period.apply(near_plus1_BID_rets.df, INDEX=ep, FUN=cor, use = "pairwise.complete.obs")
      temp <- apply(as.data.frame(rownames(correl1_rets)), 2, substr, 12, 19)
      row.names(correl1_rets) <- temp 
      
      ep <- endpoints(near_plus2_BID_rets.df, 'minutes', k=10)
      correl2_rets<- period.apply(near_plus2_BID_rets.df, INDEX=ep, FUN=cor, use = "pairwise.complete.obs")
      temp <- apply(as.data.frame(rownames(correl2_rets)), 2, substr, 12, 19)
      row.names(correl2_rets) <- temp 
           
      ep <- endpoints(near_plus3_BID_rets.df, 'minutes', k=10)
      correl3_rets<- period.apply(near_plus3_BID_rets.df, INDEX=ep, FUN=cor, use = "pairwise.complete.obs")
      temp <- apply(as.data.frame(rownames(correl3_rets)), 2, substr, 12, 19)
      row.names(correl3_rets) <- temp 
  
     if( length(correl1_rets) == 23 && length(correl2_rets) == 23 && length(correl3_rets) == 23){
          CUMULCORREL1_BID_rets <- try(cbind(CUMULCORREL1_BID_rets, correl1_rets$X2), silent=TRUE)
          CUMULCORREL2_BID_rets <- try(cbind(CUMULCORREL2_BID_rets, correl2_rets$X2), silent=TRUE)
          CUMULCORREL3_BID_rets <- try(cbind(CUMULCORREL3_BID_rets, correl3_rets$X2), silent=TRUE)
        } else{
          x <- rep(NA, times=23)
          CUMULCORREL1_BID_rets <- cbind(CUMULCORREL1_BID_rets, x) 
          CUMULCORREL2_BID_rets <- cbind(CUMULCORREL2_BID_rets, x)
          CUMULCORREL3_BID_rets <- cbind(CUMULCORREL3_BID_rets, x)  
        }
    
    # BIDS, 'Returns' - no zeros
      ep <- endpoints(near_plus1_BID_rets_no0s.df, 'minutes', k=10)
      correl1_rets<- period.apply(near_plus1_BID_rets_no0s.df, INDEX=ep, FUN=cor, use = "pairwise.complete.obs")
      temp <- apply(as.data.frame(rownames(correl1_rets)), 2, substr, 12, 19)
      row.names(correl1_rets) <- temp 

      ep <- endpoints(near_plus2_BID_rets_no0s.df, 'minutes', k=10) 
      correl2_rets<- period.apply(near_plus2_BID_rets_no0s.df, INDEX=ep, FUN=cor, use = "pairwise.complete.obs")
      temp <- apply(as.data.frame(rownames(correl2_rets)), 2, substr, 12, 19)
      row.names(correl2_rets) <- temp 
          
      ep <- endpoints(near_plus3_BID_rets_no0s.df, 'minutes', k=10)
      correl3_rets<- period.apply(near_plus3_BID_rets_no0s.df, INDEX=ep, FUN=cor, use = "pairwise.complete.obs")
      temp <- apply(as.data.frame(rownames(correl3_rets)), 2, substr, 12, 19)
      row.names(correl3_rets) <- temp 
     

      if( length(correl1_rets) == 23 && length(correl2_rets) == 23 && length(correl3_rets) == 23){
        CUMULCORREL1_BID_rets_no0s <- try(cbind(CUMULCORREL1_BID_rets_no0s, correl1_rets$X2), silent=TRUE)
        CUMULCORREL2_BID_rets_no0s <- try(cbind(CUMULCORREL2_BID_rets_no0s, correl2_rets$X2), silent=TRUE)
        CUMULCORREL3_BID_rets_no0s <- try(cbind(CUMULCORREL3_BID_rets_no0s, correl3_rets$X2), silent=TRUE)
      } else{
          x <- rep(NA, times=23)
          CUMULCORREL1_BID_rets_no0s <- cbind(CUMULCORREL1_BID_rets_no0s, x) 
          CUMULCORREL2_BID_rets_no0s <- cbind(CUMULCORREL2_BID_rets_no0s, x)
          CUMULCORREL3_BID_rets_no0s <- cbind(CUMULCORREL3_BID_rets_no0s, x)  
        }
    
    # Bids, 'Returns' - Time lag
      ep <- endpoints(near_plus1_BID_rets.df, 'minutes', k=10)
      correl1_rets<- period.apply(near_plus1_BID_rets.df, INDEX=ep, FUN=cor, use = "pairwise.complete.obs")
      temp <- apply(as.data.frame(rownames(correl1_rets)), 2, substr, 12, 19)
      row.names(correl1_rets) <- temp 
  
      ep <- endpoints(near_plus1_BID_rets_lag1s.df, 'minutes', k=10)
      correl1_rets_lag1s <- period.apply(near_plus1_BID_rets_lag1s.df, INDEX=ep, FUN=cor, use = "pairwise.complete.obs")
      temp <- apply(as.data.frame(rownames(correl1_rets_lag1s)), 2, substr, 12, 19)
      row.names(correl1_rets_lag1s) <- temp 
  
      ep <- endpoints(near_plus1_BID_rets_lag10s.df, 'minutes', k=10)
      correl1_rets_lag10s <- period.apply(near_plus1_BID_rets_lag10s.df, INDEX=ep, FUN=cor, use = "pairwise.complete.obs")
      temp <- apply(as.data.frame(rownames(correl1_rets_lag10s)), 2, substr, 12, 19)
      row.names(correl1_rets_lag10s) <- temp 

      if( length(correl1_rets) == 23 && length(correl1_rets_lag1s) == 23 && length(correl1_lag10s) == 23){
       # CUMULCORREL1_BID_rets <- try(cbind(CUMULCORREL1_BID_rets, correl1_rets$X2), silent=TRUE)
        CUMULCORREL1_BID_rets_1sec <- try(cbind(CUMULCORREL1_BID_rets_1s, correl1_rets_lag1s), silent=TRUE)
        CUMULCORREL1_BID_rets_10sec <- try(cbind(CUMULCORREL1_BID_rets_10s, correl1_rets_lag10s), silent=TRUE)
      } else{
        x <- rep(NA, times=23)
       # CUMULCORREL1_BID_rets <- cbind(CUMULCORREL1_BID_rets, x) 
        CUMULCORREL1_BID_rets_1sec <- cbind(CUMULCORREL1_BID_rets_1sec, x)
        CUMULCORREL1_BID_rets_10sec <- cbind(CUMULCORREL1_BID_rets_10sec, x)  
      }
  
    ###############################
    # OFR
    
    # In time bins - ten minutes
    # Date in the CUMULCORREL1_BID timestamp is irrelevant. We are creating 10 minute bins, in which we place 
    # correlations from each day in columns. Last time stamp says 13:19:50, but really it is 13:15:50
    # but in the timeSequence function, partial bins are not allowed and 13:09:59 to 13:15:59 is not a full 
    # ten minutes.
    
    # OFRS, 'Returns' Keep zeros
    ep <- endpoints(near_plus1_OFR_rets.df, 'minutes', k=10)
    correl1_rets<- period.apply(near_plus1_OFR_rets.df, INDEX=ep, FUN=cor, use = "pairwise.complete.obs")
    temp <- apply(as.data.frame(rownames(correl1_rets)), 2, substr, 12, 19)
    row.names(correl1_rets) <- temp 
    
    ep <- endpoints(near_plus2_OFR_rets.df, 'minutes', k=10)
    correl2_rets<- period.apply(near_plus2_OFR_rets.df, INDEX=ep, FUN=cor, use = "pairwise.complete.obs")
    temp <- apply(as.data.frame(rownames(correl2_rets)), 2, substr, 12, 19)
    row.names(correl2_rets) <- temp 
    
    ep <- endpoints(near_plus3_OFR_rets.df, 'minutes', k=10)
    correl3_rets<- period.apply(near_plus3_OFR_rets.df, INDEX=ep, FUN=cor, use = "pairwise.complete.obs")
    temp <- apply(as.data.frame(rownames(correl3_rets)), 2, substr, 12, 19)
    row.names(correl3_rets) <- temp 
    
    if( length(correl1_rets) == 23 && length(correl2_rets) == 23 && length(correl3_rets) == 23){
      CUMULCORREL1_OFR_rets <- try(cbind(CUMULCORREL1_OFR_rets, correl1_rets$X2), silent=TRUE)
      CUMULCORREL2_OFR_rets <- try(cbind(CUMULCORREL2_OFR_rets, correl2_rets$X2), silent=TRUE)
      CUMULCORREL3_OFR_rets <- try(cbind(CUMULCORREL3_OFR_rets, correl3_rets$X2), silent=TRUE)
    } else{
      x <- rep(NA, times=23)
      CUMULCORREL1_OFR_rets <- cbind(CUMULCORREL1_OFR_rets, x) 
      CUMULCORREL2_OFR_rets <- cbind(CUMULCORREL2_OFR_rets, x)
      CUMULCORREL3_OFR_rets <- cbind(CUMULCORREL3_OFR_rets, x)  
    }
    
    # OFRS, 'Returns' - no zeros
    ep <- endpoints(near_plus1_OFR_rets_no0s.df, 'minutes', k=10)
    correl1_rets<- period.apply(near_plus1_OFR_rets_no0s.df, INDEX=ep, FUN=cor, use = "pairwise.complete.obs")
    temp <- apply(as.data.frame(rownames(correl1_rets)), 2, substr, 12, 19)
    row.names(correl1_rets) <- temp 
    
    ep <- endpoints(near_plus2_OFR_rets_no0s.df, 'minutes', k=10) 
    correl2_rets<- period.apply(near_plus2_OFR_rets_no0s.df, INDEX=ep, FUN=cor, use = "pairwise.complete.obs")
    temp <- apply(as.data.frame(rownames(correl2_rets)), 2, substr, 12, 19)
    row.names(correl2_rets) <- temp 
    
    ep <- endpoints(near_plus3_OFR_rets_no0s.df, 'minutes', k=10)
    correl3_rets<- period.apply(near_plus3_OFR_rets_no0s.df, INDEX=ep, FUN=cor, use = "pairwise.complete.obs")
    temp <- apply(as.data.frame(rownames(correl3_rets)), 2, substr, 12, 19)
    row.names(correl3_rets) <- temp 
    
    
    if( length(correl1_rets) == 23 && length(correl2_rets) == 23 && length(correl3_rets) == 23){
      CUMULCORREL1_OFR_rets_no0s <- try(cbind(CUMULCORREL1_OFR_rets_no0s, correl1_rets$X2), silent=TRUE)
      CUMULCORREL2_OFR_rets_no0s <- try(cbind(CUMULCORREL2_OFR_rets_no0s, correl2_rets$X2), silent=TRUE)
      CUMULCORREL3_OFR_rets_no0s <- try(cbind(CUMULCORREL3_OFR_rets_no0s, correl3_rets$X2), silent=TRUE)
    } else{
      x <- rep(NA, times=23)
      CUMULCORREL1_OFR_rets_no0s <- cbind(CUMULCORREL1_OFR_rets_no0s, x) 
      CUMULCORREL2_OFR_rets_no0s <- cbind(CUMULCORREL2_OFR_rets_no0s, x)
      CUMULCORREL3_OFR_rets_no0s <- cbind(CUMULCORREL3_OFR_rets_no0s, x)  
    }
    
    # OFRs, 'Returns' - Time lag
    ep <- endpoints(near_plus1_OFR_rets.df, 'minutes', k=10)
    correl1_rets<- period.apply(near_plus1_OFR_rets.df, INDEX=ep, FUN=cor, use = "pairwise.complete.obs")
    temp <- apply(as.data.frame(rownames(correl1_rets)), 2, substr, 12, 19)
    row.names(correl1_rets) <- temp 
    
    ep <- endpoints(near_plus1_OFR_rets_lag1s.df, 'minutes', k=10)
    correl1_rets_lag1s <- period.apply(near_plus1_OFR_rets_lag1s.df, INDEX=ep, FUN=cor, use = "pairwise.complete.obs")
    temp <- apply(as.data.frame(rownames(correl1_rets_lag1s)), 2, substr, 12, 19)
    row.names(correl1_rets_lag1s) <- temp 
    
    ep <- endpoints(near_plus1_OFR_rets_lag10s.df, 'minutes', k=10)
    correl1_rets_lag10s <- period.apply(near_plus1_OFR_rets_lag10s.df, INDEX=ep, FUN=cor, use = "pairwise.complete.obs")
    temp <- apply(as.data.frame(rownames(correl1_rets_lag10s)), 2, substr, 12, 19)
    row.names(correl1_rets_lag10s) <- temp 
    
    if( length(correl1_rets) == 23 && length(correl1_rets_lag1s) == 23 && length(correl1_lag10s) == 23){
     # CUMULCORREL1_OFR_rets <- try(cbind(CUMULCORREL1_OFR_rets, correl1_rets$X2), silent=TRUE)
      CUMULCORREL1_OFR_rets_1sec <- try(cbind(CUMULCORREL1_OFR_rets_1s, correl1_rets_lag1s), silent=TRUE)
      CUMULCORREL1_OFR_rets_10sec <- try(cbind(CUMULCORREL1_OFR_rets_10s, correl1_rets_lag10s), silent=TRUE)
    } else{
      x <- rep(NA, times=23)
     # CUMULCORREL1_OFR_rets <- cbind(CUMULCORREL1_OFR_rets, x) 
      CUMULCORREL1_OFR_rets_1sec <- cbind(CUMULCORREL1_OFR_rets_1sec, x)
      CUMULCORREL1_OFR_rets_10sec <- cbind(CUMULCORREL1_OFR_rets_10sec, x)  
    }

}

#######################################
# Plotting summaries - keep zeros
# Bids Contemporaneous Plus1
colnames(CUMULCORREL1_BID_rets) <- "TimeBins" # This wipes the column names which is required for an rbind below
CUMULCORREL1_BID_rets$TimeBins <- factor(row.names(CUMULCORREL1_BID_rets))

CUMULCORREL1_BID_rets$MEANS <- apply(CUMULCORREL1_BID_rets[,2:dim(CUMULCORREL1_BID_rets)[2]], 1, mean, na.rm = TRUE)
CUMULCORREL1_BID_rets$sdS <- apply(CUMULCORREL1_BID_rets[,2:dim(CUMULCORREL1_BID_rets)[2]], 1, sd, na.rm = TRUE) 
CUMULCORREL1_BID_rets$contract <- factor("1 Deferred")  

# Bids Contemporaneous Plus2
colnames(CUMULCORREL2_BID_rets) <- "TimeBins" # This wipes the column names which is required for an rbind below 
CUMULCORREL2_BID_rets$TimeBins <- factor(row.names(CUMULCORREL2_BID_rets))

CUMULCORREL2_BID_rets$MEANS <- apply(CUMULCORREL2_BID_rets[,2:dim(CUMULCORREL2_BID_rets)[2]], 1, mean, na.rm = TRUE)
CUMULCORREL2_BID_rets$sdS <- apply(CUMULCORREL2_BID_rets[,2:dim(CUMULCORREL2_BID_rets)[2]], 1, sd, na.rm = TRUE) 
CUMULCORREL2_BID_rets$contract <- factor("2 Deferred")

# Bids Contemporaneous Plus3
colnames(CUMULCORREL3_BID_rets) <- "TimeBins" # This wipes the column names which is required for an rbind below
CUMULCORREL3_BID_rets$TimeBins <- factor(row.names(CUMULCORREL3_BID_rets))

CUMULCORREL3_BID_rets$MEANS <- apply(CUMULCORREL3_BID_rets[,2:dim(CUMULCORREL3_BID_rets)[2]], 1, mean, na.rm = TRUE)
CUMULCORREL3_BID_rets$sdS <- apply(CUMULCORREL3_BID_rets[,2:dim(CUMULCORREL3_BID_rets)[2]], 1, sd, na.rm = TRUE) 
CUMULCORREL3_BID_rets$contract <- factor("3 Deferred")


CUMULCORREL_BID_rets <- rbind(CUMULCORREL1_BID_rets, CUMULCORREL2_BID_rets, CUMULCORREL3_BID_rets)


pd <- position_dodge(0.4)
MAXES <- min(CUMULCORREL_BID_rets$MEANS - CUMULCORREL_BID_rets$sdS,1)
MINS <- max(CUMULCORREL_BID_rets$MEANS - CUMULCORREL_BID_rets$sdS,0)
Bid_plot <- ggplot(CUMULCORREL_BID_rets, aes(TimeBins, MEANS, ymin = MEANS-sdS, 
                                             ymax = MEANS+sdS, colour=contract, group=contract) ) + 
  geom_errorbar(size=1, position=pd) +
  geom_point(size=4, position=pd) + 
  geom_line(size=0.25, position=pd) +
  ggtitle('Contemporanious Correleation with Nearby in Bids - keep zeros') +
  theme_bw() +
  theme(axis.text.x=element_text(angle=45), axis.title.x=element_blank(), 
        panel.background = element_rect(fill = 'white'), 
        panel.grid.major = element_line(colour = "grey")) +
  #scale_colour_grey() + 
  ylab("Correlation") +
  scale_y_continuous(limits=c(-0.1,1.1))
ggsave(file="Bid_plot_report.png", path='C:/Users/mallorym/Documents/GitHub/BBOBAS', scale=1, height=4, width=8, units="in")



###############################
# OFR Contemporaneous Plus1
colnames(CUMULCORREL1_OFR_rets) <- "TimeBins" # This wipes the column names which is required for an rbind below
CUMULCORREL1_OFR_rets$TimeBins <- factor(row.names(CUMULCORREL1_OFR_rets))

CUMULCORREL1_OFR_rets$MEANS <- apply(CUMULCORREL1_OFR_rets[,2:dim(CUMULCORREL1_OFR_rets)[2]], 1, mean, na.rm = TRUE)
CUMULCORREL1_OFR_rets$sdS <- apply(CUMULCORREL1_OFR_rets[,2:dim(CUMULCORREL1_OFR_rets)[2]], 1, sd, na.rm = TRUE) 
CUMULCORREL1_OFR_rets$contract <- factor("1 Deferred")  

# OFR Contemporaneous Plus2
colnames(CUMULCORREL2_OFR_rets) <- "TimeBins" # This wipes the column names which is required for an rbind below 
CUMULCORREL2_OFR_rets$TimeBins <- factor(row.names(CUMULCORREL2_OFR_rets))

CUMULCORREL2_OFR_rets$MEANS <- apply(CUMULCORREL2_OFR_rets[,2:dim(CUMULCORREL2_OFR_rets)[2]], 1, mean, na.rm = TRUE)
CUMULCORREL2_OFR_rets$sdS <- apply(CUMULCORREL2_OFR_rets[,2:dim(CUMULCORREL2_OFR_rets)[2]], 1, sd, na.rm = TRUE) 
CUMULCORREL2_OFR_rets$contract <- factor("2 Deferred")

# OFR Contemporaneous Plus3
colnames(CUMULCORREL3_OFR_rets) <- "TimeBins" # This wipes the column names which is required for an rbind below
CUMULCORREL3_OFR_rets$TimeBins <- factor(row.names(CUMULCORREL3_OFR_rets))

CUMULCORREL3_OFR_rets$MEANS <- apply(CUMULCORREL3_OFR_rets[,2:dim(CUMULCORREL3_OFR_rets)[2]], 1, mean, na.rm = TRUE)
CUMULCORREL3_OFR_rets$sdS <- apply(CUMULCORREL3_OFR_rets[,2:dim(CUMULCORREL3_OFR_rets)[2]], 1, sd, na.rm = TRUE) 
CUMULCORREL3_OFR_rets$contract <- factor("3 Deferred")


CUMULCORREL_OFR_rets <- rbind(CUMULCORREL1_OFR_rets, CUMULCORREL2_OFR_rets, CUMULCORREL3_OFR_rets)

pd <- position_dodge(0.4)
MAXES <- min(CUMULCORREL_OFR_rets$MEANS - CUMULCORREL_OFR_rets$sdS,1)
MINS <- max(CUMULCORREL_OFR_rets$MEANS - CUMULCORREL_OFR_rets$sdS,0)
OFR_plot <- ggplot(CUMULCORREL_OFR_rets, aes(TimeBins, MEANS, ymin = MEANS-sdS, 
                                             ymax = MEANS+sdS, colour=contract, group=contract) ) + 
  geom_errorbar(size=1, position=pd) +
  geom_point(size=4, position=pd) + 
  geom_line(size=0.25, position=pd) +
  ggtitle('Contemporanious Correleation with Nearby in OFR - keep zeros') +
  theme_bw() +
  theme(axis.text.x=element_text(angle=45), axis.title.x=element_blank(), 
        panel.background = element_rect(fill = 'white'), 
        panel.grid.major = element_line(colour = "grey")) +
  #scale_colour_grey() + 
  ylab("Correlation") +
  scale_y_continuous(limits=c(-0.1,1.1))
ggsave(file="OFR_plot_report.png", path='C:/Users/mallorym/Documents/GitHub/BBOBAS', scale=1, height=4, width=8, units="in")
#########################################################################

#######################################
# Plotting summaries - No zeros
# Bids Contemporaneous Plus1
colnames(CUMULCORREL1_BID_rets_no0s) <- "TimeBins" # This wipes the column names which is required for an rbind below
CUMULCORREL1_BID_rets_no0s$TimeBins <- factor(row.names(CUMULCORREL1_BID_rets_no0s))

CUMULCORREL1_BID_rets_no0s$MEANS <- apply(CUMULCORREL1_BID_rets_no0s[,2:dim(CUMULCORREL1_BID_rets_no0s)[2]], 1, mean, na.rm = TRUE)
CUMULCORREL1_BID_rets_no0s$sdS <- apply(CUMULCORREL1_BID_rets_no0s[,2:dim(CUMULCORREL1_BID_rets_no0s)[2]], 1, sd, na.rm = TRUE) 
CUMULCORREL1_BID_rets_no0s$contract <- factor("1 Deferred")  

# Bids Contemporaneous Plus2
colnames(CUMULCORREL2_BID_rets_no0s) <- "TimeBins" # This wipes the column names which is required for an rbind below 
CUMULCORREL2_BID_rets_no0s$TimeBins <- factor(row.names(CUMULCORREL2_BID_rets_no0s))

CUMULCORREL2_BID_rets_no0s$MEANS <- apply(CUMULCORREL2_BID_rets_no0s[,2:dim(CUMULCORREL2_BID_rets_no0s)[2]], 1, mean, na.rm = TRUE)
CUMULCORREL2_BID_rets_no0s$sdS <- apply(CUMULCORREL2_BID_rets_no0s[,2:dim(CUMULCORREL2_BID_rets_no0s)[2]], 1, sd, na.rm = TRUE) 
CUMULCORREL2_BID_rets_no0s$contract <- factor("2 Deferred")

# Bids Contemporaneous Plus3
colnames(CUMULCORREL3_BID_rets_no0s) <- "TimeBins" # This wipes the column names which is required for an rbind below
CUMULCORREL3_BID_rets_no0s$TimeBins <- factor(row.names(CUMULCORREL3_BID_rets_no0s))

CUMULCORREL3_BID_rets_no0s$MEANS <- apply(CUMULCORREL3_BID_rets_no0s[,2:dim(CUMULCORREL3_BID_rets_no0s)[2]], 1, mean, na.rm = TRUE)
CUMULCORREL3_BID_rets_no0s$sdS <- apply(CUMULCORREL3_BID_rets_no0s[,2:dim(CUMULCORREL3_BID_rets_no0s)[2]], 1, sd, na.rm = TRUE) 
CUMULCORREL3_BID_rets_no0s$contract <- factor("3 Deferred")


CUMULCORREL_BID_rets_no0s <- rbind(CUMULCORREL1_BID_rets_no0s, CUMULCORREL2_BID_rets_no0s, CUMULCORREL3_BID_rets_no0s)

pd <- position_dodge(0.4)
MAXES <- min(CUMULCORREL_BID_rets_no0s$MEANS - CUMULCORREL_BID_rets_no0s$sdS,1)
MINS <- max(CUMULCORREL_BID_rets_no0s$MEANS - CUMULCORREL_BID_rets_no0s$sdS,0)
Bid_plot_no0s <- ggplot(CUMULCORREL_BID_rets_no0s, aes(TimeBins, MEANS, ymin = MEANS-sdS, 
                                                       ymax = MEANS+sdS, colour=contract, group=contract) ) + 
  geom_errorbar(size=1, position=pd) +
  geom_point(size=4, position=pd) + 
  geom_line(size=0.25, position=pd) +
  ggtitle('Contemporanious Correleation with Nearby in Bids - No zeros') +
  theme_bw() +
  theme(axis.text.x=element_text(angle=45), axis.title.x=element_blank(), 
        panel.background = element_rect(fill = 'white'), 
        panel.grid.major = element_line(colour = "grey")) +
  #scale_colour_grey() + 
  ylab("Correlation") +
  scale_y_continuous(limits=c(-0.1,1.1))
ggsave(file="Bid_plot_no0s_report.png", path='C:/Users/mallorym/Documents/GitHub/BBOBAS', scale=1, height=4, width=8, units="in")

###############################
# OFR Contemporaneous Plus1
colnames(CUMULCORREL1_OFR_rets_no0s) <- "TimeBins" # This wipes the column names which is required for an rbind below
CUMULCORREL1_OFR_rets_no0s$TimeBins <- factor(row.names(CUMULCORREL1_OFR_rets_no0s))

CUMULCORREL1_OFR_rets_no0s$MEANS <- apply(CUMULCORREL1_OFR_rets_no0s[,2:dim(CUMULCORREL1_OFR_rets_no0s)[2]], 1, mean, na.rm = TRUE)
CUMULCORREL1_OFR_rets_no0s$sdS <- apply(CUMULCORREL1_OFR_rets_no0s[,2:dim(CUMULCORREL1_OFR_rets_no0s)[2]], 1, sd, na.rm = TRUE) 
CUMULCORREL1_OFR_rets_no0s$contract <- factor("1 Deferred")  

# OFR Contemporaneous Plus2
colnames(CUMULCORREL2_OFR_rets_no0s) <- "TimeBins" # This wipes the column names which is required for an rbind below 
CUMULCORREL2_OFR_rets_no0s$TimeBins <- factor(row.names(CUMULCORREL2_OFR_rets_no0s))

CUMULCORREL2_OFR_rets_no0s$MEANS <- apply(CUMULCORREL2_OFR_rets_no0s[,2:dim(CUMULCORREL2_OFR_rets_no0s)[2]], 1, mean, na.rm = TRUE)
CUMULCORREL2_OFR_rets_no0s$sdS <- apply(CUMULCORREL2_OFR_rets_no0s[,2:dim(CUMULCORREL2_OFR_rets_no0s)[2]], 1, sd, na.rm = TRUE) 
CUMULCORREL2_OFR_rets_no0s$contract <- factor("2 Deferred")

# OFR Contemporaneous Plus3
colnames(CUMULCORREL3_OFR_rets_no0s) <- "TimeBins" # This wipes the column names which is required for an rbind below
CUMULCORREL3_OFR_rets_no0s$TimeBins <- factor(row.names(CUMULCORREL3_OFR_rets_no0s))

CUMULCORREL3_OFR_rets_no0s$MEANS <- apply(CUMULCORREL3_OFR_rets_no0s[,2:dim(CUMULCORREL3_OFR_rets_no0s)[2]], 1, mean, na.rm = TRUE)
CUMULCORREL3_OFR_rets_no0s$sdS <- apply(CUMULCORREL3_OFR_rets_no0s[,2:dim(CUMULCORREL3_OFR_rets_no0s)[2]], 1, sd, na.rm = TRUE) 
CUMULCORREL3_OFR_rets_no0s$contract <- factor("3 Deferred")


CUMULCORREL_OFR_rets_no0s <- rbind(CUMULCORREL1_OFR_rets_no0s, CUMULCORREL2_OFR_rets_no0s, CUMULCORREL3_OFR_rets_no0s)

pd <- position_dodge(0.4)
MAXES <- min(CUMULCORREL_OFR_rets_no0s$MEANS - CUMULCORREL_OFR_rets_no0s$sdS,1)
MINS <- max(CUMULCORREL_OFR_rets_no0s$MEANS - CUMULCORREL_OFR_rets_no0s$sdS,0)
OFR_plot_no0s <- ggplot(CUMULCORREL_OFR_rets_no0s, aes(TimeBins, MEANS, ymin = MEANS-sdS, 
                                                       ymax = MEANS+sdS, colour=contract, group=contract) ) + 
  geom_errorbar(size=1, position=pd) +
  geom_point(size=4, position=pd) + 
  geom_line(size=0.25, position=pd) +
  ggtitle('Contemporanious Correleation with Nearby in OFR - No zeros') +
  theme_bw() +
  theme(axis.text.x=element_text(angle=45), axis.title.x=element_blank(), 
        panel.background = element_rect(fill = 'white'), 
        panel.grid.major = element_line(colour = "grey")) +
  #scale_colour_grey() + 
  ylab("Correlation") +
  scale_y_continuous(limits=c(-0.1,1.1))
ggsave(file="OFR_plot_no0s_report.png", path='C:/Users/mallorym/Documents/GitHub/BBOBAS', scale=1, height=4, width=8, units="in")

#########################################################################
#######################################
# Plotting summaries - Time Lags keep zeros
# Bids Plus1
colnames(CUMULCORREL1_BID_rets_1sec) <- "TimeBins" # This wipes the column names which is required for an rbind below
CUMULCORREL1_BID_rets_1sec$TimeBins <- factor(row.names(CUMULCORREL1_BID_rets_1sec))

CUMULCORREL1_BID_rets_1sec$MEANS <- apply(CUMULCORREL1_BID_rets_1sec[,2:dim(CUMULCORREL1_BID_rets_1sec)[2]], 1, mean, na.rm = TRUE)
CUMULCORREL1_BID_rets_1sec$sdS <- apply(CUMULCORREL1_BID_rets_1sec[,2:dim(CUMULCORREL1_BID_rets_1sec)[2]], 1, sd, na.rm = TRUE) 
CUMULCORREL1_BID_rets_1sec$contract <- factor("1 Deferred")
CUMULCORREL1_BID_rets_1sec$lag <- factor("One Second")

colnames(CUMULCORREL1_BID_rets_10sec) <- "TimeBins" # This wipes the column names which is required for an rbind below
CUMULCORREL1_BID_rets_10sec$TimeBins <- factor(row.names(CUMULCORREL1_BID_rets_10sec))

CUMULCORREL1_BID_rets_10sec$MEANS <- apply(CUMULCORREL1_BID_rets_10sec[,2:dim(CUMULCORREL1_BID_rets_10sec)[2]], 1, mean, na.rm = TRUE)
CUMULCORREL1_BID_rets_10sec$sdS <- apply(CUMULCORREL1_BID_rets_10sec[,2:dim(CUMULCORREL1_BID_rets_10sec)[2]], 1, sd, na.rm = TRUE) 
CUMULCORREL1_BID_rets_10sec$contract <- factor("1 Deferred")  
CUMULCORREL1_BID_rets_10sec$lag <- factor("Ten Seconds")  

# Bids  Plus2
colnames(CUMULCORREL2_BID_rets_1sec) <- "TimeBins" # This wipes the column names which is required for an rbind below 
CUMULCORREL2_BID_rets_1sec$TimeBins <- factor(row.names(CUMULCORREL2_BID_rets_1sec))

CUMULCORREL2_BID_rets_1sec$MEANS <- apply(CUMULCORREL2_BID_rets_1sec[,2:dim(CUMULCORREL2_BID_rets_1sec)[2]], 1, mean, na.rm = TRUE)
CUMULCORREL2_BID_rets_1sec$sdS <- apply(CUMULCORREL2_BID_rets_1sec[,2:dim(CUMULCORREL2_BID_rets_1sec)[2]], 1, sd, na.rm = TRUE) 
CUMULCORREL2_BID_rets_1sec$contract <- factor("2 Deferred")

# Bids  Plus3
colnames(CUMULCORREL3_BID_rets_1sec) <- "TimeBins" # This wipes the column names which is required for an rbind below
CUMULCORREL3_BID_rets_1sec$TimeBins <- factor(row.names(CUMULCORREL3_BID_rets_1sec))

CUMULCORREL3_BID_rets_1sec$MEANS <- apply(CUMULCORREL3_BID_rets_1sec[,2:dim(CUMULCORREL3_BID_rets_1sec)[2]], 1, mean, na.rm = TRUE)
CUMULCORREL3_BID_rets_1sec$sdS <- apply(CUMULCORREL3_BID_rets_1sec[,2:dim(CUMULCORREL3_BID_rets_1sec)[2]], 1, sd, na.rm = TRUE) 
CUMULCORREL3_BID_rets_1sec$contract <- factor("3 Deferred")

CUMULCORREL1_BID_rets$lag <- factor("Contemporaneous")
CUMULCORREL_BID_rets_timelag <- rbind(CUMULCORREL1_BID_rets, CUMULCORREL1_BID_rets_1sec, CUMULCORREL1_BID_rets_10sec)

pd <- position_dodge(0.4)
MAXES <- min(CUMULCORREL_BID_rets_timelag$MEANS - CUMULCORREL_BID_rets_timelag$sdS,1)
MINS <- max(CUMULCORREL_BID_rets_timelag$MEANS - CUMULCORREL_BID_rets_timelag$sdS,0)
Bid_plot_timelag <- ggplot(CUMULCORREL_BID_rets_timelag, aes(TimeBins, MEANS, ymin = MEANS-sdS, 
                                                             ymax = MEANS+sdS, colour=lag, group=lag) ) + 
  geom_errorbar(size=1, position=pd) +
  geom_point(size=4, position=pd) + 
  geom_line(size=0.25, position=pd) +
  ggtitle('Nearby and 1 Deferred Correlations in Bid for Various Time Lags - keep zeros') +
  theme_bw() +
  theme(axis.text.x=element_text(angle=45), axis.title.x=element_blank(), 
        panel.background = element_rect(fill = 'white'), 
        panel.grid.major = element_line(colour = "grey")) +
  #scale_colour_grey() + 
  ylab("Correlation") +
  scale_y_continuous(limits=c(-0.1,1.1))
ggsave(file="Bid_plot_timelag_report.png", path='C:/Users/mallorym/Documents/GitHub/BBOBAS', scale=1, height=4, width=8, units="in")

###############################
# OFR Contemporaneous Plus1
colnames(CUMULCORREL1_OFR_rets_1sec) <- "TimeBins" # This wipes the column names which is required for an rbind below
CUMULCORREL1_OFR_rets_1sec$TimeBins <- factor(row.names(CUMULCORREL1_OFR_rets_1sec))

CUMULCORREL1_OFR_rets_1sec$MEANS <- apply(CUMULCORREL1_OFR_rets_1sec[,2:dim(CUMULCORREL1_OFR_rets_1sec)[2]], 1, mean, na.rm = TRUE)
CUMULCORREL1_OFR_rets_1sec$sdS <- apply(CUMULCORREL1_OFR_rets_1sec[,2:dim(CUMULCORREL1_OFR_rets_1sec)[2]], 1, sd, na.rm = TRUE) 
CUMULCORREL1_OFR_rets_1sec$contract <- factor("1 Deferred")
CUMULCORREL1_OFR_rets_1sec$lag <- factor("One Second")

colnames(CUMULCORREL1_OFR_rets_10sec) <- "TimeBins" # This wipes the column names which is required for an rbind below
CUMULCORREL1_OFR_rets_10sec$TimeBins <- factor(row.names(CUMULCORREL1_OFR_rets_10sec))

CUMULCORREL1_OFR_rets_10sec$MEANS <- apply(CUMULCORREL1_OFR_rets_10sec[,2:dim(CUMULCORREL1_OFR_rets_10sec)[2]], 1, mean, na.rm = TRUE)
CUMULCORREL1_OFR_rets_10sec$sdS <- apply(CUMULCORREL1_OFR_rets_10sec[,2:dim(CUMULCORREL1_OFR_rets_10sec)[2]], 1, sd, na.rm = TRUE) 
CUMULCORREL1_OFR_rets_10sec$contract <- factor("1 Deferred")  
CUMULCORREL1_OFR_rets_10sec$lag <- factor("Ten Seconds")  

# OFR  Plus2
colnames(CUMULCORREL2_OFR_rets_1sec) <- "TimeBins" # This wipes the column names which is required for an rbind below 
CUMULCORREL2_OFR_rets_1sec$TimeBins <- factor(row.names(CUMULCORREL2_OFR_rets_1sec))

CUMULCORREL2_OFR_rets_1sec$MEANS <- apply(CUMULCORREL2_OFR_rets_1sec[,2:dim(CUMULCORREL2_OFR_rets_1sec)[2]], 1, mean, na.rm = TRUE)
CUMULCORREL2_OFR_rets_1sec$sdS <- apply(CUMULCORREL2_OFR_rets_1sec[,2:dim(CUMULCORREL2_OFR_rets_1sec)[2]], 1, sd, na.rm = TRUE) 
CUMULCORREL2_OFR_rets_1sec$contract <- factor("2 Deferred")

# OFR  Plus3
colnames(CUMULCORREL3_OFR_rets_1sec) <- "TimeBins" # This wipes the column names which is required for an rbind below
CUMULCORREL3_OFR_rets_1sec$TimeBins <- factor(row.names(CUMULCORREL3_OFR_rets_1sec))

CUMULCORREL3_OFR_rets_1sec$MEANS <- apply(CUMULCORREL3_OFR_rets_1sec[,2:dim(CUMULCORREL3_OFR_rets_1sec)[2]], 1, mean, na.rm = TRUE)
CUMULCORREL3_OFR_rets_1sec$sdS <- apply(CUMULCORREL3_OFR_rets_1sec[,2:dim(CUMULCORREL3_OFR_rets_1sec)[2]], 1, sd, na.rm = TRUE) 
CUMULCORREL3_OFR_rets_1sec$contract <- factor("3 Deferred")

CUMULCORREL1_OFR_rets$lag <- factor("Contemporaneous")
CUMULCORREL_OFR_rets_timelag <- rbind(CUMULCORREL1_OFR_rets, CUMULCORREL1_OFR_rets_1sec, CUMULCORREL1_OFR_rets_10sec)

pd <- position_dodge(0.4)
MAXES <- min(CUMULCORREL_OFR_rets_timelag$MEANS - CUMULCORREL_OFR_rets_timelag$sdS,1)
MINS <- max(CUMULCORREL_OFR_rets_timelag$MEANS - CUMULCORREL_OFR_rets_timelag$sdS,0)
OFR_plot_timelag <- ggplot(CUMULCORREL_OFR_rets_timelag, aes(TimeBins, MEANS, ymin = MEANS-sdS, 
                                                             ymax = MEANS+sdS, colour=lag, group=lag) ) + 
  geom_errorbar(size=1, position=pd) +
  geom_point(size=4, position=pd) + 
  geom_line(size=0.25, position=pd) +
  ggtitle('Nearby and 1 Deferred Correlations in OFR for Various Time Lags - keep zeros') +
  theme_bw() +
  theme(axis.text.x=element_text(angle=45), axis.title.x=element_blank(), 
        panel.background = element_rect(fill = 'white'), 
        panel.grid.major = element_line(colour = "grey")) +
  #scale_colour_grey() + 
  ylab("Correlation") +
  scale_y_continuous(limits=c(-0.1,1.1))
ggsave(file="OFR_plot_timelag_report.png", path='C:/Users/mallorym/Documents/GitHub/BBOBAS', scale=1, height=4, width=8, units="in")
###########################################